from data.constants import *
from data.db_session import *
from data.all_models import *
from data.functions import *
from data.race import *
from random import randint
import datetime as dt
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import pymorphy2


def send_message(u: User, t: str, attachment=None) -> None:
    p = {'user_id': u.id,
         'random_id': randint(0, 2 ** 64),
         'message': t,
         'keyboard': get_keyboard(u.status)}
    if attachment:
        p['attachment'] = attachment
    vk.messages.send(**p)


def error_message(u: User) -> None:
    send_message(u, '–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')


def get_fullname(u: User) -> str:
    u = vk.users.get(user_ids=[u.id])[0]
    return f'{u["first_name"]} {u["last_name"]}'


MAX_CH = 50
S = 1000
USERS_QUEUE = []
PUBLIC_CHAT = []

global_init('race_db')
db_sess = create_session()

statuses = db_sess.query(Status).all()
if not statuses:
    add_statuses()

morph = pymorphy2.MorphAnalyzer()

vk_session = vk_api.VkApi(login=LOGIN, password=PASSWORD, token=TOKEN)
vk = vk_session.get_api()
longpoll = VkBotLongPoll(vk_session, -VK_ID)
upload = vk_api.VkUpload(vk)

for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:
        vk_id = event.obj.message['from_id']
        text = event.obj.message['text']
        message = '-'
        user = db_sess.query(User).filter(User.id == vk_id).first()
        start_points = randint(8, 12)
        if not user:
            ids = db_sess.query(Car).all()
            if ids:
                max_id = max(ids, key=lambda c: c.id).id
            else:
                max_id = 0
            car = Car(id=max_id + 1, max_speed=1, acceleration=1, turbo=0)
            db_sess.add(car)
            user = User(id=vk_id, status=-1, car_id=car.id, rating=1000, upgrade_points=start_points)
            db_sess.add(user)

        if user.status == -1:
            user.status = 0
            invite = db_sess.query(InvitedUsers).filter(InvitedUsers.id == user.id).first()
            send_message(user, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∏–≥—Ä—É! –ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Ç–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –∑–∞–µ–∑–¥–∞—Ö üòÑ')
            if invite:
                invite.in_game = True
                points = randint(3, 5)
                owner = db_sess.query(User).filter(User.id == invite.owner_id).first()
                owner_fullname = get_fullname(owner)
                user_fullname = get_fullname(user)
                p_word = morph.parse('–æ—á–∫–æ')[0].make_agree_with_number(points).word
                send_message(user, f'–í—ã –∑–∞—à–ª–∏ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –≥–æ–Ω—â–∏–∫–∞ [id{user.id}|{owner_fullname}].'
                                   f' –û–Ω –ø–æ–ª—É—á–∏—Ç {points} {p_word} –ø—Ä–æ–∫–∞—á–∫–∏ –∑–∞ —ç—Ç–æ')
                send_message(owner,
                             f'[id{user.id}|{get_fullname(owner)}] –∑–∞—à–µ–ª –≤ –∏–≥—Ä—É –ø–æ –≤–∞—à–µ–º—É '
                             f'–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {points} {p_word} '
                             f'–ø—Ä–æ–∫–∞—á–∫–∏!')
                owner.upgrade_points += points
            c_word = morph.parse('–æ—á–∫–æ')[0].make_agree_with_number(start_points).word
            send_message(user, f'–¢–µ–±–µ –∑–∞—á–∏—Å–ª–∏–ª–∏ {start_points} {c_word} –ø—Ä–æ–∫–∞—á–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è '
                               f'—Ç–≤–æ–µ–π –º–∞—à–∏–Ω—ã')
        elif user.status == 0:
            if text == '–ì–æ–Ω–∫–∞ üèéÔ∏è':
                user.status = 1
                send_message(user, '–ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å", —á—Ç–æ–± –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ –≥–æ–Ω–∫–∏')
            elif text == '–ú–æ—è –º–∞—à–∏–Ω–∞ üöó':
                user.status = 5
                send_message(user, '–í –≥–æ–Ω–∫–∞—Ö –≤—Å–µ–≥–¥–∞ —Ä–µ—à–∞–µ—Ç –Ω–∞ —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –º–æ—â–Ω–∞—è –º–∞—à–∏–Ω–∞, —ç—Ç–æ '
                                   '–≤—Å–µ–≥–¥–∞ –∑–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞')
            elif text == '–†–µ–π—Ç–∏–Ω–≥':
                rating = user.rating
                p_word = morph.parse('–æ—á–∫–æ')[0].make_agree_with_number(rating).word
                message = f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å {rating} {p_word}\n\n–õ–∏–¥–µ—Ä—ã –ø–æ –æ—á–∫–∞–º:\n'
                leaders = db_sess.query(User).order_by(User.rating.desc()).all()
                n = 1
                while n <= 10 and leaders:
                    ld = leaders.pop(0)
                    message += f'{n}. [id{ld.id}|{get_fullname(ld)}] - {ld.rating}\n'
                    n += 1
                send_message(user, message)
            elif text == '–ü—Ä–∞–≤–∏–ª–∞':
                send_message(user, '–í –≥–æ–Ω–∫–∞—Ö –≤—Å–µ–≥–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –º–∞—à–∏–Ω–∞, –±–æ–ª–µ–µ —Å–∏–ª—å–Ω–∞—è –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏'
                                   '—Å—Ç–∏–∫–∞–º. –ß—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å –æ—á–∫–∏ –ø—Ä–æ–∫–∞—á–∫–∏ –º–∞—à–∏–Ω—ã, –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π')
            elif text == '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π üëã':
                user.status = 4
                send_message(user, '–û—Ç—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å.'
                                   ' –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—á–∫–∏ –ø—Ä–æ–∫–∞—á–∫–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –∑–∞–π–¥–µ—Ç –≤ '
                                   '–∏–≥—Ä—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–ø–æ–º—è–Ω—É—Ç—å –µ–º—É –ª–∏—á–Ω–æ, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏.')
            elif text == '–ü—Ä–æ—Ñ–∏–ª—å':
                user.status = 7
                send_message(user, '–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–≤–æ–µ–π –∏–≥—Ä—ã –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å '
                                   '—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤–æ–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–µ–∑–¥–æ–≤')
            elif text == '–ß–∞—Ç':
                user.status = 8
                send_message(user, '–í—ã –≤–æ—à–ª–∏ –≤ –æ–±—â–∏–π —á–∞—Ç. –¢–µ–ø–µ—Ä—å –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É –≤–∏–¥–µ—Ç—å –≤—Å–µ,'
                                   ' –∫—Ç–æ —Ç–∞–∫–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—â–µ–º —á–∞—Ç–µ. –û—Ç–ø—Ä–∞–≤–∏—Ç—å \"–í—ã–π—Ç–∏\" –∏–ª–∏ '
                                   '–Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É, —á—Ç–æ–± –≤—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                PUBLIC_CHAT.append(user)
            else:
                error_message(user)
        elif user.status == 1:
            if text == '–ù–∞–∑–∞–¥ üîô':
                user.status = 0
                send_message(user, 'üèéÔ∏è')
            elif text == '–ù–∞—á–∞—Ç—å':
                user.status = 2
                send_message(user, '–ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')
                correct_rivals = [r for r in USERS_QUEUE if
                                  user.rating - 50 < user.rating < user.rating + 50]
                if correct_rivals:
                    rival = correct_rivals.pop(0)
                    racers = [user, rival]
                    for r in racers:
                        r.status = 3
                        for rv in racers:
                            if rv != r:
                                message = f'–ù–∞–π–¥–µ–Ω —Å–æ–ø–µ—Ä–Ω–∏–∫. –¢–≤–æ–∏–º —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º –±—É–¥–µ—Ç ' \
                                          f'[id{rv.id}|{get_fullname(rv)}] ({rv.rating})'
                                break
                        send_message(r, message)
                    user_car = db_sess.query(Car).filter(Car.id == user.car_id).first()
                    rival_car = db_sess.query(Car).filter(Car.id == rival.car_id).first()
                    race = Race(user_car, rival_car)
                    race.execute(S)
                    gifs = race.get_content()
                    car_winner = race.get_winner()
                    winner = db_sess.query(User).filter(User.car_id == car_winner.id).first()
                    delta_points = randint(4, 8)
                    for i in range(2):
                        racers[i].status = 0
                        gif = upload.document_message(gifs[i], peer_id=racers[i].id, )
                        doc = gif['doc']
                        owner_id, doc_id = doc['owner_id'], doc['id']
                        if racers[i] == winner:
                            racers[i].rating += delta_points
                            message = f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!! –¢—ã –ø–æ–±–µ–¥–∏–ª! –¢—ã –ø–æ–ª—É—á–∞–µ—à—å {delta_points} ' \
                                      f'—Ä–µ–π—Ç–∏–Ω–≥–∞'
                        else:
                            racers[i].rating -= delta_points
                            message = f'–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑. –¢—ã —Ç–µ—Ä—è–µ—à—å {delta_points} —Ä–µ–π—Ç–∏–Ω–≥–∞'
                        send_message(racers[i], message, attachment=f'doc{owner_id}_{doc_id}')
                    db_sess.add(Result(user1=user.id, user2=rival.id,
                                       winner=winner.id, time=dt.datetime.now().timestamp()))
                else:
                    USERS_QUEUE.append(user)
            else:
                error_message(user)
        elif user.status == 2:
            if text == '–û—Ç–º–µ–Ω–∞ üîô':
                USERS_QUEUE.remove(user)
                user.status = 1
                send_message(user, '–ü–æ–∏—Å–∫ –≥–æ–Ω–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω')
            else:
                error_message(user)
        elif user.status == 3:
            send_message(user, '–í—ã –≤ –≥–æ–Ω–∫–µ, –Ω–∏–∫–∞–∫–∏–µ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')
        elif user.status == 4:
            if text == '–ù–∞–∑–∞–¥ üîô':
                user.status = 0
                send_message(user, '–ß–µ–º –±–æ–ª—å—à–µ –ø—Ä–∏–≥–ª–∞—à–µ—à—å –¥—Ä—É–∑–µ–π, —Ç–µ–º –º–æ—â–Ω–µ–µ —É —Ç–µ–±—è –º–∞—à–∏–Ω–∞')
            else:
                nickname = text[15:]
                try:
                    friends = vk.users.get(user_ids=[nickname])
                    if friends:
                        friend = friends[0]
                        if db_sess.query(User).filter(User.id == friend['id']).first():
                            send_message(user,
                                         '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—É, –µ–≥–æ –Ω–µ–ª—å–∑—è '
                                         '–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ –∏–ª–∏ '
                                         '–Ω–∞–∂–º–∏—Ç–µ \"–ù–∞–∑–∞–¥\"')
                        elif db_sess.query(InvitedUsers).filter(
                                InvitedUsers.id == friend['id']).first():
                            send_message(user,
                                         '–ö—Ç–æ-—Ç–æ —É–∂–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–≥—Ä—É, –µ–≥–æ –Ω–µ–ª—å–∑—è '
                                         '–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '
                                         '\"–ù–∞–∑–∞–¥\"')
                        else:
                            db_sess.add(
                                InvitedUsers(id=friend['id'], owner_id=user.id, in_game=False))
                            send_message(user, f'–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{friend["id"]}|'
                                               f'{friend["first_name"]} {friend["last_name"]}] '
                                               f'–≤ –∏–≥—Ä—É, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —É–ø–æ–º—è–Ω—É—Ç—å –µ–º—É –æ–± —ç—Ç–æ–º –ª–∏—á–Ω–æ. '
                                               f'–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –µ—â–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"–ù–∞–∑–∞–¥\" '
                                               f'–¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                    else:
                        error_message(user)
                except vk_api.exceptions.ApiError:
                    send_message(user, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ '
                                       '–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ù–∞–∑–∞–¥\" –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        elif user.status == 5:
            if text == '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏':
                car = db_sess.query(Car).filter(Car.id == user.car_id).first()
                send_message(user, f'–¢–≤–æ—è –º–∞—à–∏–Ω–∞:\n'
                                   f'¬∑ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å - {car.max_speed}/{MAX_CH}\n'
                                   f'¬∑ –£—Å–∫–æ—Ä–µ–Ω–∏–µ - {car.max_speed}/{MAX_CH}\n'
                                   f'¬∑ –¢—É—Ä–±–æ - {car.turbo}/{MAX_CH} (–≤–∫–ª—é—á–∞–µ—Ç—Å—è, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ '
                                   f'–≥–æ–Ω—â–∏–∫ –ø—Ä–æ–µ—Ö–∞–ª –ø–æ–ª–æ–≤–∏–Ω—É —Ç—Ä–∞—Å—Å—ã)\n')
            elif text == '–ü—Ä–æ–∫–∞—á–∞—Ç—å':
                user.status = 6
                p_word = morph.parse('–æ—á–∫–æ')[0].make_agree_with_number(user.upgrade_points).word
                send_message(user, f'–£ –≤–∞—Å {user.upgrade_points} {p_word}. –ò—Å–ø–æ–ª—å–∑—É–π –∏—Ö —á—Ç–æ–± '
                                   f'–ø—Ä–æ–∫–∞—á–∞—Ç—å —Å–≤–æ—é –º–∞—à–∏–Ω—É. –í—ã–±–µ—Ä–∏ —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–æ–∫–∞—á–∞—Ç—å')
            elif text == '–ù–∞–∑–∞–¥ üîô':
                user.status = 0
                send_message(user, '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ —Å–≤–æ–π –≥–∞—Ä–∞–∂ –ø–æ—á–∞—â–µ')
            else:
                error_message(user)
        elif user.status == 6:
            car = db_sess.query(Car).filter(Car.id == user.car_id).first()
            if text == '–ù–∞–∑–∞–¥ üîô':
                user.status = 5
                send_message(user, '–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤ –≥–æ–Ω–∫—É! –ü–æ–∫–∞–∂–∏ –≤—Å–µ–º –∫–∞–∫–∞—è —É —Ç–µ–±—è –±—ã—Å—Ç—Ä–∞—è —Ç–∞—á–∫–∞')
            elif user.upgrade_points == 0:
                user.status = 5
                send_message(user, '–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ—á–∫–æ–≤, —á—Ç–æ–± –ø—Ä–æ–∫–∞—á–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–∞—à–∏–Ω—ã')
            elif text == '–ú. —Å–∫–æ—Ä–æ—Å—Ç—å':
                if car.max_speed == MAX_CH:
                    send_message(user, '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —É–∂–µ –ø—Ä–æ–∫–∞—á–µ–Ω–∞ –Ω–∞ –º–∞–∫—Å–∏–º—É–º')
                else:
                    car.max_speed += 1
                    user.upgrade_points -= 1
                    send_message(user, '–í—ã —É–¥–∞—á–Ω–æ –ø—Ä–æ–∫–∞—á–∞–ª–∏ –≤–∞—à—É –º–∞—à–∏–Ω—É')
            elif text == '–£—Å–∫–æ—Ä–µ–Ω–∏–µ':
                if car.acceleration == MAX_CH:
                    send_message(user, '–£—Å–∫–æ—Ä–µ–Ω–∏–µ —É–∂–µ –ø—Ä–æ–∫–∞—á–µ–Ω–æ –Ω–∞ –º–∞–∫—Å–∏–º—É–º,'
                                       ' –ø—Ä–æ–∫–∞—á–∞–π—Ç–µ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ')
                else:
                    car.acceleration += 1
                    user.upgrade_points -= 1
                    send_message(user, '–í—ã —É–ª—É—á—à–∏–ª–∏ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤–∞—à–µ–π –º–∞—à–∏–Ω—ã')
            elif text == '–¢—É—Ä–±–æ':
                if car.turbo == MAX_CH:
                    send_message(user, '–¢—É—Ä–±–æ —É–∂–µ –ø—Ä–æ–∫–∞—á–µ–Ω–æ –Ω–∞ –º–∞–∫—Å–∏–º—É–º')
                else:
                    car.turbo += 1
                    user.upgrade_points -= 1
                    send_message(user, '–¢–µ–ø–µ—Ä—å –≤ –≤–∞—à–µ–π –º–∞—à–∏–Ω–µ —Å—Ç–æ–∏—Ç –±–æ–ª–µ–µ –º–æ—â–Ω–æ–µ —Ç—É—Ä–±–æ')
            else:
                error_message(user)
        elif user.status == 7:
            if text == '–û–±–æ –º–Ω–µ':
                races = db_sess.query(Result).filter(
                    (Result.user1 == user.id) | (Result.user2 == user.id)).all()
                wins = db_sess.query(Result).filter(Result.winner == user.id).all()
                invited = db_sess.query(InvitedUsers).filter(InvitedUsers.owner_id == user.id).all()
                used_invitations = db_sess.query(InvitedUsers).filter(
                    InvitedUsers.owner_id == user.id, InvitedUsers.in_game.is_(True)).all()
                percent = "{:.2f}%".format(len(wins) / len(races) * 100) \
                    if races else "–Ω–µ —Å—ã–≥—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –≥–æ–Ω–∫–∏"
                send_message(user, f'[id{user.id}|{get_fullname(user)}] ({user.rating})\n'
                                   f'¬∑ –ì–æ–Ω–æ–∫: {len(races)}\n'
                                   f'¬∑ –ü–æ–±–µ–¥: {len(wins)}\n'
                                   f'¬∑ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: {percent}\n'
                                   f'¬∑ –ü—Ä–∏–≥–ª–∞—Å–∏–ª –≤ –∏–≥—Ä—É: {len(invited)}\n'
                                   f'¬∑ –ó–∞—à–ª–∏ –≤ –∏–≥—Ä—É –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é: {len(used_invitations)}')
            elif text == '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–µ–∑–¥—ã':
                message = '–ù–∞–¥–µ–µ–º—Å—è —Ç—ã –±—É–¥–µ—à—å –¥–æ–≤–æ–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å–≤–æ–∏—Ö –∑–∞–µ–∑–¥–æ–≤\n\n'
                races = db_sess.query(Result).filter(
                    (Result.user1 == user.id) | (Result.user2 == user.id)).order_by(
                    Result.time).all()
                n = 0
                while n < 10 and races:
                    r = races.pop()
                    result = '–ü–û–ë–ï–î–ê' if r.winner == user.id else '–ü–û–†–ê–ñ–ï–ù–ò–ï'
                    rival_id = r.user1 if r.user2 == user.id else r.user2
                    rival = db_sess.query(User).filter(User.id == rival_id).first()
                    delta_time = dt.datetime.now().timestamp() - r.time
                    if delta_time < 3600:
                        time_text = '–º–µ–Ω—å—à–µ —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
                    elif delta_time < 3600 * 24:
                        time_text = '—Å–µ–≥–æ–¥–Ω—è'
                    else:
                        time_text = '–Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥'
                    message += f'¬∑ {result} –ø—Ä–æ—Ç–∏–≤ [id{rival_id}|{get_fullname(rival)}] - ' \
                               f'{time_text}\n'
                send_message(user, message)

            elif text == '–ù–∞–∑–∞–¥ üîô':
                user.status = 0
                send_message(user, '–£–¥–∞—á–∏ –≤ –≥–æ–Ω–∫–∞—Ö! ')
            else:
                error_message(user)
        elif user.status == 8:
            if text == '–í—ã–π—Ç–∏ üîô':
                PUBLIC_CHAT.remove(user)
                user.status = 0
                send_message(user, '–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –æ–±—â–∏–π —á–∞—Ç')
            else:
                for u in PUBLIC_CHAT:
                    if u != user:
                        send_message(u, f'[id{u.id}|{get_fullname(u)}]: {text}')
    db_sess.commit()
